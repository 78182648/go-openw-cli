stages:
    - build
    # - test
    # - deploy

build-staging:
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    image: golang:1.12.3
    stage: build
    tags:
        - go-runner
    before_script:
#        - export GO_PROJECT_NAMESPACE="$GOPATH/src/github.com/blocktree"
#        - echo $GO_PROJECT_NAMESPACE
#        - mkdir -p $GO_PROJECT_NAMESPACE
#        - ln -srf $(pwd) $GO_PROJECT_NAMESPACE
#        - export GO_PROJECT_PATH="$GO_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
#        - echo $GO_PROJECT_PATH
#        - cd $GO_PROJECT_PATH
        - rm -rf release
        - export GOPROXY=https://goproxy.io
    script:
#        - cd $GO_PROJECT_PATH
#        - echo $(pwd)
#        - ls
#        - ls $(pwd)/vendor/github.com/blocktree/
        - mkdir release
        - go build -o release/go-openw-cli ./main.go
        - ls release
    artifacts:
        name: go-openw-cli
        paths:
            - release/go-openw-cli
    environment:
        name: staging

test-staging:
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    image: golang
    stage: build
    tags:
        - go-runner
    before_script:
        - export GO_PROJECT_NAMESPACE="$GOPATH/src/github.com/blocktree"
        - echo $GO_PROJECT_NAMESPACE
        - mkdir -p $GO_PROJECT_NAMESPACE
        - ln -srf $(pwd) $GO_PROJECT_NAMESPACE
        - export GO_PROJECT_PATH="$GO_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
        - echo $GO_PROJECT_PATH
        - cd $GO_PROJECT_PATH
    script:
        - echo $(pwd)
        # - go test open_webapp/main_test.go
    environment:
        name: staging
